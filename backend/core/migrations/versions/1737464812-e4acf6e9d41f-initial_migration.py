"""initial migration

Revision ID: e4acf6e9d41f
Revises: 
Create Date: 2025-01-21 13:06:52.309408

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "e4acf6e9d41f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "jetton",
        sa.Column("address", sa.String(length=67), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", mysql.TEXT(), nullable=True),
        sa.Column("symbol", sa.String(length=255), nullable=False),
        sa.Column("total_supply", sa.BigInteger(), nullable=False),
        sa.Column("logo_path", sa.String(length=290), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("address"),
    )
    op.create_table(
        "nft_collection",
        sa.Column("address", sa.String(length=67), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", mysql.TEXT(), nullable=True),
        sa.Column("logo_path", sa.String(length=290), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("address"),
    )
    op.create_table(
        "telegram_chat",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("is_forum", sa.Boolean(), nullable=False),
        sa.Column("logo_path", sa.String(length=55), nullable=True),
        sa.Column("invite_link", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("telegram_id", sa.BigInteger(), nullable=True),
        sa.Column("is_premium", sa.Boolean(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=False),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("language", sa.String(length=10), nullable=False),
        sa.Column("is_blocked", sa.Boolean(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_telegram_id"), "user", ["telegram_id"], unique=True)
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=False)
    op.create_table(
        "telegram_chat_jetton",
        sa.Column("jetton_address", sa.String(length=67), nullable=False),
        sa.Column("chat_id", sa.BigInteger(), nullable=False),
        sa.Column("threshold", sa.BigInteger(), nullable=False),
        sa.Column("whale_threshold", sa.BigInteger(), nullable=True),
        sa.Column("whale_label_template", sa.String(length=25), nullable=True),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["chat_id"], ["telegram_chat.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["jetton_address"], ["jetton.address"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("jetton_address", "chat_id"),
    )
    op.create_table(
        "telegram_chat_nft_collection",
        sa.Column("collection_address", sa.String(length=67), nullable=False),
        sa.Column("chat_id", sa.BigInteger(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["chat_id"], ["telegram_chat.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["collection_address"], ["nft_collection.address"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("collection_address", "chat_id"),
    )
    op.create_table(
        "telegram_chat_user",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("chat_id", sa.BigInteger(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("is_whale_admin", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["chat_id"], ["telegram_chat.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "chat_id"),
    )
    op.create_table(
        "user_wallet",
        sa.Column("address", sa.String(length=67), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("hide_wallet", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("address"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "jetton_wallet",
        sa.Column("address", sa.String(length=67), nullable=False),
        sa.Column("jetton_master_address", sa.String(length=67), nullable=False),
        sa.Column("owner_address", sa.String(length=67), nullable=False),
        sa.Column("balance", mysql.BIGINT(), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["jetton_master_address"], ["jetton.address"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["owner_address"], ["user_wallet.address"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("address"),
    )
    op.create_table(
        "nft_item",
        sa.Column("address", sa.String(length=67), nullable=False),
        sa.Column("owner_address", sa.String(length=67), nullable=False),
        sa.Column("collection_address", sa.String(length=67), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["collection_address"], ["nft_collection.address"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["owner_address"], ["user_wallet.address"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("address"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("nft_item")
    op.drop_table("jetton_wallet")
    op.drop_table("user_wallet")
    op.drop_table("telegram_chat_user")
    op.drop_table("telegram_chat_nft_collection")
    op.drop_table("telegram_chat_jetton")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_telegram_id"), table_name="user")
    op.drop_table("user")
    op.drop_table("telegram_chat")
    op.drop_table("nft_collection")
    op.drop_table("jetton")
    # ### end Alembic commands ###
