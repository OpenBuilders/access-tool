name: Deploy Application

on:
  push:
    branches:
      - feat/tma

jobs:
#  build-and-push-frontend:
#    permissions:
#      contents: read  # Required for checkout
#      packages: write  # Required for pushing to GHCR
#    runs-on: ubuntu-latest
#    environment: staging
#    env:
#      CI: true
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Extract Git Commit SHA
#        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
#
#      - name: Log in to GitHub Container Registry (GHCR)
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}  # Uses the GitHub username
#          password: ${{ secrets.GITHUB_TOKEN }}  # Can use PAT if needed
#
#      - name: Create settings.json from environment variables
#        run: |
#          echo "Creating settings.json from environment variables"
#          echo '{
#            "botUrl": "${{ vars.NEXT_PUBLIC_BOT_URL }}",
#            "sentryDns": "${{ vars.NEXT_PUBLIC_SENTRY_DNS }}"
#          }' > frontend/public/settings.json
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: frontend.Dockerfile
#          push: true
#          build-args: |
#            NEXT_PUBLIC_CDN_URL=${{ vars.NEXT_PUBLIC_CDN_URL }}
#            NEXT_PUBLIC_BOT_URL=${{ vars.NEXT_PUBLIC_BOT_URL }}
#            NEXT_PUBLIC_SENTRY_DNS=${{ vars.NEXT_PUBLIC_SENTRY_DNS }}
#            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
#
#          tags: |
#            ghcr.io/${{ github.repository_owner }}/octagate-frontend:latest
#            ghcr.io/${{ github.repository_owner }}/octagate-frontend:${{ env.GIT_SHA }}
  deploy:
    runs-on: ubuntu-latest
    environment: staging
#    needs: build-and-push-frontend
    permissions:
      packages: read  # Allows pulling images from GHCR

    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USENAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd ~/gateway-tool
            git pull
            make build && make migrate && make restart
