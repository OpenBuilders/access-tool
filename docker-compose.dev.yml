x-python-service:
  &x-python-service
  user: "1000:1000"
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_started
  networks:
    - internal


services:
  api:
    <<: *x-python-service
    build:
      context: .
      dockerfile: ./config/docker/backend.Dockerfile
      target: api
    image: gateway-api
    env_file:
      - ./config/env/.api.env
      - ./config/env/.core.env
      - ./config/env/.indexer.env
    container_name: "gateway-api"
    ports:
      - "8000:8000"
    volumes:
      - ./backend/api:/app/api
      - ./backend/core:/app/core
    command: [
      "gunicorn",
      "api.app:app",
      "-k", "uvicorn_worker.UvicornWorker",
      "--bind", "0.0.0.0:8000",
      "--workers", "1",
      "--access-logfile", "-",
      "--reload"
    ]

  nginx:
    image: "nginx:stable"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./config/certs:/etc/nginx/certs
    networks:
      - internal
    depends_on:
      - api
      - frontend

  frontend:
    image: "gateway-frontend"
    pull_policy: never
    build:
      context: .
      dockerfile: ./config/docker/Dockerfile.frontend-dev
    container_name: "gateway-frontend"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/.env:/app/.env
    networks:
      - internal
